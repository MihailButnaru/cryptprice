"""
Django settings for core project.

Generated by "django-admin startproject" using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

from configurations.base import Configuration
from configurations.values import SecretValue, BooleanValue, ListValue

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


class Base(Configuration):
    SECRET_KEY = SecretValue(
        environ_prefix=None, environ_required=True, environ_name="SECRET_KEY"
    )

    DEBUG = BooleanValue(
        environ_prefix=None, environ_name="DEBUG", default=True
    )

    ALLOWED_HOSTS = ListValue(
        environ_prefix=None, environ_required=True, environ_name="ALLOWED_HOSTS"
    )

    # Application definition

    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "cryptprice",
    ]

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "core.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]

    WSGI_APPLICATION = "core.wsgi.application"

    DATABASES = {"default": {}}

    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        },
        {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", },
        {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator", },
        {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator", },
    ]

    LANGUAGE_CODE = "en-us"

    TIME_ZONE = "UTC"

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True

    STATIC_URL = "/static/"

    # ----> SLACK CONFIGURATION <------

    SLACK_BOT_USER_OAUTH_ACCESS_TOKEN = SecretValue(
        environ_prefix=None,
        environ_required=True,
        environ_name="SLACK_BOT_USER_OAUTH_ACCESS_TOKEN",
    )

    SLACK_CLIENT_ID = SecretValue(
        environ_prefix=None, environ_required=True, environ_name="SLACK_CLIENT_ID"
    )

    SLACK_CLIENT_SECRET = SecretValue(
        environ_prefix=None, environ_required=True, environ_name="SLACK_CLIENT_SECRET"
    )

    SLACK_VERIFICATION_TOKEN = SecretValue(
        environ_prefix=None,
        environ_required=True,
        environ_name="SLACK_VERIFICATION_TOKEN",
    )
